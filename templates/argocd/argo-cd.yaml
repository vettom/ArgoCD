apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "-4"
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: default
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
  sources:
  - repoURL: https://argoproj.github.io/argo-helm
    chart: argo-cd
    targetRevision: 7.8.4
    helm:
      valuesObject:
        server:
          extraArgs:
            - --insecure
        configs:
          params:
            application.namespaces: "default, argocd, dvdemo"
            applicationsetcontroller.namespaces: "default, argocd, dvdemo"
            notificationscontroller.selfservice.enabled: true
            applicationsetcontroller.allowed.scm.providers: false
          cm:
            application.resourceTrackingMethod: annotation+label
        notifications:
          secret:
            create: false
          templates: 
            template.app-sync-succeeded: |
              email:
                subject: Application {{.app.metadata.name}} has been successfully synced.
              message: |
                {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.
                Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
              slack:
                attachments: |-
                  [{
                    "title": "{{ .app.metadata.name}}",
                    "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                    "color": "#18be52",
                    "fields": [
                    {
                      "title": "Sync Status",
                      "value": "{{.app.status.sync.status}}",
                      "short": true
                    },
                    {
                      "title": "Repository",
                      "value": "{{.app.spec.source.repoURL}}",
                      "short": true
                    }
                    {{range $index, $c := .app.status.conditions}}
                    {{if not $index}},{{end}}
                    {{if $index}},{{end}}
                    {
                      "title": "{{$c.type}}",
                      "value": "{{$c.message}}",
                      "short": true
                    }
                    {{end}}
                    ]
                  }]
          triggers: 
            trigger.on-deployed: |
              - description: Application is synced and healthy. Triggered once per commit.
                oncePer: app.status.sync.revision
                send:
                - app-deployed
                when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
            trigger.on-health-degraded: |
              - description: Application has degraded
                send:
                - app-health-degraded
                when: app.status.health.status == 'Degraded'
            trigger.on-sync-failed: |
              - description: Application syncing has failed
                send:
                - app-sync-failed
                when: app.status.operationState.phase in ['Error', 'Failed']
            trigger.on-sync-running: |
              - description: Application is being synced
                send:
                - app-sync-running
                when: app.status.operationState.phase in ['Running']
            trigger.on-sync-status-unknown: |
              - description: Application status is 'Unknown'
                send:
                - app-sync-status-unknown
                when: app.status.sync.status == 'Unknown'
            trigger.on-sync-succeeded: |
              - description: Application syncing has succeeded
                send:
                - app-sync-succeeded
                when: app.status.operationState.phase in ['Succeeded']
            
            For more information: https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/triggers/#default-triggers
            defaultTriggers: |
              - on-sync-status-unknown
          cm:
            # -- Whether helm chart creates notifications controller config map
            create: true